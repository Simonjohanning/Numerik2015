program Aufgabe2_8
  implicit none

  !variable declaration
  double precision :: partialsum, partialsum_previous, x, x_pow, summand_previous
  integer :: k, k_factorial
  logical :: result_change

  !setup variables
  write(*,*) 'Bitte Zahl eingeben und mit [ENTER] bestätigen'
  read(*,*) x
  x_pow = 1.
  result_change = .TRUE.
  partialsum_previous = 0.
	!set partial sum to the first element (so it's different)
  partialsum = 1.
  	!start with the second element (since first is impicitely computed already)
  k = 1
  k_factorial = 1

  do while(result_change)
	partialsum_previous = partialsum
	x_pow = x * x_pow
	k_factorial = k*k_factorial
	partialsum = partialsum + (x_pow / dble(k_factorial))
	write(*,*) 'Partialsumme ',partialsum_previous,' + ',(x_pow / dble(k_factorial)),' ergibt neue Partialsumme ',partialsum
!	write(*,*) 'partialsum = ',partialsum,' partialsum_previous = ',partialsum_previous
!	write(*,*) 'partialsum == partialsum_previous = ',partialsum == partialsum_previous
	result_change = .NOT.(partialsum == partialsum_previous)	
	k = k+1
  end do
  write(*,*) 'Programm hat nach ',k,' Iterationsschritten mit dem Ergebnis ',partialsum,' terminiert.'
  write(*,*) 'Eingebaute e-Funktion liefert ',exp(x)


  write(*,*) 'Verhalten mittels unserer Lösung:'
  result_change = .TRUE.
  partialsum_previous = 0.
	!set partial sum to the first element (so it's different)
  partialsum = 1.
  	!start with the second element (since first is impicitely computed already)
  k = 1
  summand_previous = 1.
  do while(result_change)
	partialsum_previous = partialsum
	partialsum = partialsum_previous + (summand_previous * (x / dble(k)))
	write(*,*) 'Partialsumme ',partialsum_previous,' + ',(x_pow / dble(k_factorial)),' ergibt neue Partialsumme ',partialsum
!	write(*,*) 'partialsum = ',partialsum,' partialsum_previous = ',partialsum_previous
!	write(*,*) 'partialsum == partialsum_previous = ',partialsum == partialsum_previous
	result_change = .NOT.(partialsum == partialsum_previous)	
	summand_previous = summand_previous * (x / dble(k))
	k = k+1
  end do
  write(*,*) 'Programm hat nach ',k,' Iterationsschritten mit dem Ergebnis ',partialsum,' terminiert.'
  write(*,*) 'Eingebaute e-Funktion liefert ',exp(x)

end program Aufgabe2_8
